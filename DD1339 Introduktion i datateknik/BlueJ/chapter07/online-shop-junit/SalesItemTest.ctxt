#BlueJ class context
comment0.params=
comment0.target=SalesItemTest()
comment0.text=\r\n\ Default\ constructor\ for\ test\ class\ SalesItemTest\r\n
comment1.params=
comment1.target=void\ testAddCommentAndCount()
comment1.text=\r\n\ Test\ that\ a\ comment\ can\ be\ added,\ and\ that\ the\ comment\ count\ is\ correct\ afterwards.\r\n\ \r\n\ positivt\ test\r\n
comment2.params=
comment2.target=void\ testIllegalRating()
comment2.text=\r\n\ Test\ that\ a\ comment\ using\ an\ illegal\ rating\ value\ is\ rejected.\r\n\ \r\n\ negativt\ test\r\n
comment3.params=
comment3.target=void\ testInit()
comment3.text=\r\n\ Test\ that\ a\ sales\ item\ is\ correctly\ initialised\ (name\ and\ price).\r\n\ \r\n\ positivt\ test\r\n
comment4.params=
comment4.target=void\ testTwoComments()
comment4.text=\r\n\ Testar\ att\ om\ man\ l\u00E4gger\ tv\u00E5\ kommentarer\ och\ sedan\ r\u00E4knar\ den\ s\u00E5\ r\u00E4knar\ det\ r\u00E4tt\r\n\ \r\n\ positivt\ test\r\n
comment5.params=
comment5.target=void\ testAddComment()
comment5.text=\r\n\ Exercise\ 7.15\ Create\ a\ test\ to\ check\ that\ addComment\ returns\ false\ when\ a\ comment\ \r\n\ from\ the\ same\ author\ already\ exists.\r\n\ \r\n\ Testar\ att\ om\ man\ l\u00E4gger\ tv\u00E5\ kommentarer\ fr\u00E5n\ samma\ skribent\ s\u00E5\ ska\ det\ ge\ false\r\n\ \r\n\ negativ\ test\r\n
comment6.params=
comment6.target=void\ testRatingBoundry()
comment6.text=\ \r\n\ Exercise\ 7.16\ Create\ a\ test\ that\ performs\ negative\ testing\ on\ the\ boundaries\ of\ the\ rating\r\n\ range.\ That\ is,\ test\ the\ values\ 0\ and\ 6\ as\ a\ rating\ (the\ values\ just\ outside\ the\ legal\ range).\ We\r\n\ expect\ these\ to\ return\ false,\ so\ assert\ false\ in\ the\ result\ dialog.\ You\ will\ notice\ that\ one\ of\r\n\ these\ actually\ (incorrectly)\ returns\ true.\ This\ is\ the\ bug\ we\ uncovered\ earlier\ in\ manual\ testing.\r\n\ Make\ sure\ that\ you\ assert\ false\ anyway.\ The\ assertion\ states\ the\ expected\ result,\ not\r\n\ the\ actual\ result.\r\n\r\n\ Testar\ att\ om\ man\ l\u00E4gger\ tv\u00E5\ kommentarer\ med\ rating\ utanf\u00F6r\ gr\u00E4nserna,\ s\u00E5\ ska\ det\ ge\ false\ \r\n\ \r\n\ negativ\ test\r\n
comment7.params=
comment7.target=void\ testFindMostHelpfulComment()
comment7.text=\r\nExercise\ 7.19\ Create\ tests\ for\ SalesItem\ that\ test\ whether\ the\ findMostHelpfulComment\ \r\nmethod\ works\ as\ expected.\ Note\ that\ this\ method\ returns\ a\ Comment\ object.\ During\r\nyour\ testing,\ you\ can\ use\ the\ Get\ button\ in\ the\ method\ result\ dialog\ to\ get\ the\ result\ object\r\nonto\ the\ object\ bench,\ which\ then\ allows\ you\ to\ make\ further\ method\ calls\ and\ add\ assertions\r\nfor\ this\ object.\ This\ allows\ you\ to\ identify\ the\ comment\ object\ returned\ (e.g.,\ by\ checking\ its\r\nauthor).\ You\ can\ also\ assert\ that\ the\ result\ is\ null\ or\ not\ null,\ depending\ on\ what\ you\ expect.\ \r\n\r\nTestar\ att\ om\ man\ l\u00E4gger\ tv\u00E5\ kommentarer\ och\ votar\ upp\ dem\ och\ sedan\ callar\ p\u00E5\ FindMostHelpfulComment\r\ns\u00E5\ ska\ det\ objektet\ som\ pekar\ p\u00E5\ den\ med\ h\u00F6gst\ voting\r\n\r\npositiv\ test\r\n
numComments=8
